#!/bin/bash

# Sets up Haskell

# Adds cabal's install directories to the PATH for both the user and local
# directories. This may not be safe if you don't trust your local paths.
PATH=./cabal-dev/bin:$HOME/.cabal/bin:$PATH
export PATH

# Unregisters broken GHC packages. Run this a few times to resolve dependency
# rot in installed packages.
# ghc-pkg-clean -f cabal/dev/packages*.conf also works.
function ghc-pkg-clean() {
    for p in `ghc-pkg check $* 2>&1  | grep problems | awk '{print $6}' | sed -e 's/:$//'`
    do
        echo unregistering $p; ghc-pkg $* unregister $p
    done
}
 
# Removes all installed GHC/cabal packages, leaving ~/.cabal binaries and docs
# in place.
# When all else fails, use this to get out of dependency hell and start over.
function ghc-pkg-reset() {
    read -p 'erasing all your user ghc and cabal packages - are you sure (y/n) ? ' ans
    test x$ans == xy && ( \
        echo 'erasing directories under ~/.ghc'; rm -rf `find ~/.ghc -maxdepth 1 -type d`; \
        echo 'erasing ~/.cabal/lib'; rm -rf ~/.cabal/lib; \
        echo 'erasing ~/.cabal/packages'; rm -rf ~/.cabal/packages; \
        echo 'erasing ~/.cabal/share'; rm -rf ~/.cabal/share; \
        )
}

# Adds syntax highlighting to Haskell files and paginates them.
function hsless() {
    cat "${1}" | hscolor | less
}
